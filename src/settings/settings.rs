use dotenv;

/// Инициализация переменных окружения из файла `.env`.
///
/// Загружает все переменные из файла `.env` в окружение текущего процесса.
///
/// Если файл `.env` отсутствует или возникла ошибка при его чтении,
/// приложение завершится с ошибкой.
///
/// # Паника
/// При ошибке чтения `.env` файла будет вызван `expect(...)`.
pub fn init() {
    dotenv::dotenv().ok().expect("Failed to load .env file");
}

/// Получение значения переменной окружения по имени.
///
/// Функция читает переменную окружения с указанным именем и возвращает её значение.
/// Если переменная не найдена, произойдет паника с сообщением об ошибке.
///
/// :param parameter: Имя переменной окружения.
/// :return: Значение переменной окружения в виде строки.
///
/// # Примеры
/// ```
/// let db_url = get("DATABASE_URL");
/// ```
///
/// # Паника
/// Если переменная `parameter` не определена в окружении, приложение завершится с ошибкой.
pub fn get(parameter: &str) -> String {
    let env_parameter = std::env::var(parameter)
        .expect(&format!("{} is not defined in the environment.", parameter));
    env_parameter
}
